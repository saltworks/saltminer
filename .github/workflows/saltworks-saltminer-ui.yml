name: Saltworks.SaltMiner.Ui

on:
  push:
    branches:
    - main
    - '3.*'
    paths:
      - 'Saltworks.SaltMiner.Ui/**'
      - '.github/workflows/saltworks-saltminer-ui.yml'      
  workflow_dispatch:

env:
  DIAGNOSTIC_MODE: false

jobs:
  build_ui:
    name: Build UI
    runs-on: 
    - self-hosted
    - node

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5.4.0
      with:
        python-version: '3.9.21'
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './Saltworks.SaltMiner.Ui'

    - run: cd Saltworks.SaltMiner.Ui && npm ci
      name: npm install
    - run: npm run generate --prefix ./Saltworks.SaltMiner.Ui
      name: Build app
    
    - run: ls -la ./Saltworks.SaltMiner.Ui/dist/smpgui
      name: Show npm output
      if: env.DIAGNOSTIC_MODE == 'true'
    # This is just a temporary hack to use existing Dockerfile
    - run: mkdir -p ./artifacts/dist/ui-web/smpgui
      name: Create legacy artifacts dir
    - run: cp -r ./Saltworks.SaltMiner.Ui/dist/smpgui/* ./artifacts/dist/ui-web/smpgui
      name: Copy output to legacy dir

    - name: Get configuration file
      run: cp ./Saltworks.SaltMiner.Deploy/addins/ui-web/config.json ./artifacts/dist/ui-web/smpgui 

    - run: ls -lah ./artifacts/dist/ui-web/smpgui --group-directories-first
      name: Show copied files
      if: env.DIAGNOSTIC_MODE == 'true'
    
    - name: Login to the container registry
      uses: docker/login-action@v3.4.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: saltworks/saltminer
        tags: |
          type=raw,value=ui-${{ github.ref_name }}.{{date 'YYYYMMDD-HHmmss' tz='America/Chicago'}}
        labels: |
          org.opencontainers.image.title=saltminer-ui
          org.opencontainers.image.description=SaltMiner UI
          org.opencontainers.image.vendor=Saltworks Security, LLC

    - name: Build and push Docker images
      uses: docker/build-push-action@v6.15.0
      with:
        file: .dockerfiles/Dockerfile-smpgui
        context: .
        push: true
        provenance: mode=max
        sbom: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Show complete docker tag
      run: echo ${{ steps.meta.outputs.tags }}
      if: env.DIAGNOSTIC_MODE == 'true'
  
    - name: Extract tag component
      run: echo "TAG=`cut -d ':' -f2 <<< ${{ steps.meta.outputs.tags }}`" >> $GITHUB_ENV
  
    - name: Show new tag
      run: echo "Tag ${{ env.TAG }}"
      if: env.DIAGNOSTIC_MODE == 'true'
      
    - id: extract_tag
      run: echo "tag=${{ env.TAG }}" >> $GITHUB_OUTPUT
      name: Set tag output
  
    outputs:
      tag: ${{ steps.extract_tag.outputs.tag }}

  update_compose:
    name: Update Compose
    runs-on:
    - self-hosted
    needs: build_ui
    concurrency:
      group: saltminer-setup-${{ github.ref }}
      cancel-in-progress: false
    env:
      TARGET_KEY: SM_PENTEST_IMAGE_VERSION

    steps:
    - name: Checkout saltminer-setup repo
      uses: actions/checkout@v4
      with:
        repository: saltworks/saltminer-setup
        token: ${{ secrets.SALTMINER_SETUP }}
        ref: ${{ github.ref_name }}

    - name: Show current .env file.
      run: cat .env
      if: env.DIAGNOSTIC_MODE == 'true'

    - run: sed -i -e "/${{ env.TARGET_KEY }}/ s/=.*$/=${{ needs.build_ui.outputs.tag }}/" .env
      name: Update Compose file  

    - run: cat .env
      name: Show transformed file.
      if: env.DIAGNOSTIC_MODE == 'true'

    - name: Push changes
      run: |
        git config user.name ${{ github.actor }}
        git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        git add .env
        git commit -m "Updated .env ${{ env.TARGET_KEY }} value"
        git push
