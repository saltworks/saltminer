worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        server_names_hash_bucket_size 64;
        server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;
		client_max_body_size 100M;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1.2 TLSv1.3; # Prefer TLSv1.3 only, add TLSv1.2 and uncomment next line to include secure 1.2 ciphers
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;
		
        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        # add notice to error_log to increase logging level

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        # Enable if using SSL terminated here
#        server {
#            listen              80;
#            listen              [::]:80;
#            location / {
#               return 301 https://$host$request_uri;
#            }
#        }

        server {
            listen              80;
            listen              [::]:80;

            # Enable for SSL (disable port 80 if so)
#            listen              443 ssl;
#            listen              [::]:443 ssl;
            # NOTE: nginx only supports separate SSL key and cert, no encryption
#            ssl_certificate     "/var/www/ssl/saltworks.io.crt";
#            ssl_certificate_key "/var/www/ssl/saltworks.io.key";

            # Enable if using SSL (applies whether terminated here or elsewhere)
#            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

            # If using SSL, set X-Forwarded-Proto to https under smuiapi below (line 111 as of this note writing)
            
            location ~ "/s/[a-zA-Z-]*/app/smpgui/engagements/" {
                # have them go to .../smpgui/engagements/.. 
                rewrite ^/s/[a-zA-Z-]*/app/smpgui/engagements/(.*)$ /smpgui/engagements/$1 redirect;
            }

            location /smapi/ {
                #rewrite_log on;
                rewrite ^/smapi/(.*)$ /$1 break;
                proxy_pass         http://localhost:5000;
                proxy_http_version 1.1;
                proxy_set_header   Upgrade $http_upgrade;
                proxy_set_header   Connection keep-alive;
                proxy_set_header   Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto $scheme;
            }
            location /smuiapi/ {
                #rewrite_log on;
                rewrite ^/smuiapi/(.*)$ /$1 break;
                proxy_pass         http://localhost:5001;
                proxy_http_version 1.1;
                proxy_set_header   Upgrade $http_upgrade;
                proxy_set_header   Connection keep-alive;
                proxy_set_header   Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto http; # this may need to change depending on environment
            }
            location / {
                error_page 502 @html502error;

                proxy_pass         http://localhost:5601;
                proxy_http_version 1.1;
                proxy_set_header   Upgrade $http_upgrade;
                proxy_set_header   Connection keep-alive;
                proxy_set_header   Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto $scheme;
            }
            # See https://www.nginx.com/blog/using-nginx-plus-with-selinux/ if expected permissions aren't working
            location /smpgui/ {
                root               /usr/share/saltworks/saltminer-3.0.0/ui-web;
                try_files          $uri /smpgui/index.html =404;
            }
            location @html502error {
                root /var/www/html;
                try_files /error502.html 502;
            }
        }

        #include /etc/nginx/conf.d/*.conf;
        #include /etc/nginx/sites-enabled/*;
}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}