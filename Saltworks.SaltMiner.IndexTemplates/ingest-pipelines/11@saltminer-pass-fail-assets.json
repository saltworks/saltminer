{"processors":
[
  {
    "script": {
      "source": "String vulnReason = 'Vulnerability grace period failure';\nList reasons = ctx.saltminer.score.pass_fail_reasons;\n\ntry {\n    if (ctx.saltminer.score.pass_fail == false) {\n        ctx.saltminer.score.pass_fail_reasons = [vulnReason]; // Assign a new list with the 'vulnReason'\n    } else if (ctx.saltminer.score.pass_fail == true) {\n        reasons.clear(); // Clear the 'reasons' list\n        ctx.saltminer.score.pass_fail_reasons = reasons; // Assign the cleared 'reasons' list to 'pass_fail_reasons'\n    }\n} catch (Exception ex) {\n    ctx.error = ex.toString();\n}\n",
      "ignore_failure": true,
      "description": "Clears old failure reasons from reasons list"
    }
  },
  {
    "script": {
      "source": "try {\n    List failReasons = ctx.saltminer.score.pass_fail_reasons;\n    String businessCriticality = ctx.saltminer.asset.attributes.business_criticality;\n    long sastFrequencyLong = 0;\n    String sastFrequencyStr = '30';\n\n    String sdlcStatus = ctx.saltminer.asset.attributes.sdlc_status;\n\n    if (businessCriticality == 'Medium') {\n        if (sdlcStatus == 'Production') {\n            sastFrequencyStr = '30';\n            sastFrequencyLong = 30;\n            ctx.error = sastFrequencyLong;\n        } else if (sdlcStatus == 'Development') {\n            sastFrequencyStr = '7';\n            sastFrequencyLong = 7;\n            ctx.error = sastFrequencyLong;\n        } else if (sdlcStatus == 'QA') {\n            sastFrequencyStr = '14';\n            sastFrequencyLong = 14;\n            ctx.error = sastFrequencyLong;\n        } else if (sdlcStatus == 'Retired') {\n            sastFrequencyStr = '0';\n            sastFrequencyLong = 0;\n            ctx.error = sastFrequencyLong;\n        }\n    } else if (businessCriticality == 'High') {\n        if (sdlcStatus == 'Production') {\n            sastFrequencyStr = '30';\n            sastFrequencyLong = 30;\n            ctx.error = sastFrequencyLong;\n        } else if (sdlcStatus == 'Development') {\n            sastFrequencyStr = '0';\n            sastFrequencyLong = 0;\n            ctx.error = sastFrequencyLong;\n        } else if (sdlcStatus == 'QA') {\n            sastFrequencyStr = '0';\n            sastFrequencyLong = 0;\n            ctx.error = sastFrequencyLong;\n        } else if (sdlcStatus == 'Retired') {\n            sastFrequencyStr = '0';\n            sastFrequencyLong = 0;\n            ctx.error = sastFrequencyLong;\n        }\n    } else if (businessCriticality == 'Low') {\n        if (sdlcStatus == 'Production') {\n            sastFrequencyStr = '180';\n            sastFrequencyLong = 180;\n        } else if (sdlcStatus == 'Development') {\n            sastFrequencyStr = '0';\n            sastFrequencyLong = 0;\n        } else if (sdlcStatus == 'QA') {\n            sastFrequencyStr = '14';\n            sastFrequencyLong = 14;\n        } else if (sdlcStatus == 'Retired') {\n            sastFrequencyStr = '0';\n            sastFrequencyLong = 0;\n        }\n    }\n\n    String sastReason = \"No sast scan within \" + sastFrequencyStr + \" days\";\n\n    if (sastFrequencyLong != 0) {\n        if (ctx.saltminer.score.last_scan.sast > sastFrequencyLong) {\n            ctx.saltminer.score.pass_fail = false;\n            if (!ctx.saltminer.score.pass_fail_reasons.contains(sastReason)) {\n                failReasons.add(sastReason);\n            }\n        }\n    }\n} catch (Exception ex) {\n    ctx.error = ex.toString();\n}\n",
      "ignore_failure": true,
      "description": "Evaluates pass fail for SAST scan frequency"
    }
  },
  {
    "script": {
      "source": "try {\n    List failReasons = ctx.saltminer.score.pass_fail_reasons;\n    String businessCriticality = ctx.saltminer.asset.attributes.business_criticality;\n    long dastFrequencyLong = 0;\n    String dastFrequencyStr = '30'; \n\n    String sdlcStatus = ctx.saltminer.asset.attributes.sdlc_status;\n\n    if (businessCriticality == 'Medium') {\n        if (sdlcStatus == 'Production') {\n            dastFrequencyStr = '30';\n            dastFrequencyLong = 30;\n            ctx.error = dastFrequencyLong;\n        } else if (sdlcStatus == 'Development') {\n            dastFrequencyStr = '7';\n            dastFrequencyLong = 7;\n            ctx.error = dastFrequencyLong;\n        } else if (sdlcStatus == 'QA') {\n            dastFrequencyStr = '14';\n            dastFrequencyLong = 14;\n            ctx.error = dastFrequencyLong;\n        } else if (sdlcStatus == 'Retired') {\n            dastFrequencyStr = '0';\n            dastFrequencyLong = 0;\n            ctx.error = dastFrequencyLong;\n        }\n    } else if (businessCriticality == 'High') {\n        if (sdlcStatus == 'Production') {\n            dastFrequencyStr = '90';\n            dastFrequencyLong = 90;\n            ctx.error = dastFrequencyLong;\n        } else if (sdlcStatus == 'Development') {\n            dastFrequencyStr = '0';\n            dastFrequencyLong = 0;\n            ctx.error = dastFrequencyLong;\n        } else if (sdlcStatus == 'QA') {\n            dastFrequencyStr = '0';\n            dastFrequencyLong = 0;\n            ctx.error = dastFrequencyLong;\n        } else if (sdlcStatus == 'Retired') {\n            dastFrequencyStr = '0';\n            dastFrequencyLong = 0;\n            ctx.error = dastFrequencyLong;\n        }\n    } else if (businessCriticality == 'Low') {\n        if (sdlcStatus == 'Production') {\n            dastFrequencyStr = '180';\n            dastFrequencyLong = 180;\n        } else if (sdlcStatus == 'Development') {\n            dastFrequencyStr = '0';\n            dastFrequencyLong = 0;\n        } else if (sdlcStatus == 'QA') {\n            dastFrequencyStr = '14';\n            dastFrequencyLong = 14;\n        } else if (sdlcStatus == 'Retired') {\n            dastFrequencyStr = '0';\n            dastFrequencyLong = 0;\n        }\n    }\n\n    String dastReason = \"No dast scan within \" + dastFrequencyStr + \" days\";\n    if (dastFrequencyLong != 0) {\n        if (ctx.saltminer.score.last_scan.dast > dastFrequencyLong) {\n            ctx.saltminer.score.pass_fail = false;\n            if (!ctx.saltminer.score.pass_fail_reasons.contains(dastReason)) {\n                failReasons.add(dastReason);\n            }\n        }\n    }\n} catch (Exception ex) {\n    ctx.error = ex.toString();\n}\n",
      "ignore_failure": true,
      "description": "Evaluates pass fail for DAST scan frequency"
    }
  },
  {
    "script": {
      "source": "try {\n    List failReasons = ctx.saltminer.score.pass_fail_reasons;\n    String businessCriticality = ctx.saltminer.asset.attributes.business_criticality;\n    long mobileFrequencyLong = 0;\n    String mobileFrequencyStr = '0';\n\n    String sdlcStatus = ctx.saltminer.asset.attributes.sdlc_status;\n\n    if (businessCriticality == 'High') {\n        if (sdlcStatus == 'Production') {\n            mobileFrequencyStr = '30';\n            mobileFrequencyLong = 30;\n            ctx.error = mobileFrequencyLong;\n        } else if (sdlcStatus == 'Development') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n            ctx.error = mobileFrequencyLong;\n        } else if (sdlcStatus == 'QA') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n            ctx.error = mobileFrequencyLong;\n        } else if (sdlcStatus == 'Retired') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n            ctx.error = mobileFrequencyLong;\n        }\n    } else if (businessCriticality == 'Medium') {\n        if (sdlcStatus == 'Production') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n            ctx.error = mobileFrequencyLong;\n        } else if (sdlcStatus == 'Development') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n            ctx.error = mobileFrequencyLong;\n        } else if (sdlcStatus == 'QA') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n            ctx.error = mobileFrequencyLong;\n        } else if (sdlcStatus == 'Retired') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n            ctx.error = mobileFrequencyLong;\n        }\n    } else if (businessCriticality == 'Low') {\n        if (sdlcStatus == 'Production') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n        } else if (sdlcStatus == 'Development') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n        } else if (sdlcStatus == 'QA') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n        } else if (sdlcStatus == 'Retired') {\n            mobileFrequencyStr = '0';\n            mobileFrequencyLong = 0;\n        }\n    }\n\n    String mobileReason = \"No mobile scan within \" + mobileFrequencyStr + \" days\";\n\n    if (mobileFrequencyLong != 0) {\n        if (ctx.saltminer.score.last_scan.mobile > mobileFrequencyLong) {\n            ctx.saltminer.score.pass_fail = false;\n            if (!ctx.saltminer.score.pass_fail_reasons.contains(mobileReason)) {\n                failReasons.add(mobileReason);\n            }\n        }\n    }\n} catch (Exception ex) {\n    ctx.error = ex.toString();\n}\n",
      "ignore_failure": true,
      "description": "Evaluates pass fail for Mobile scan frequency"
    }
  },
  {
    "script": {
      "source": "try {\n    List failReasons = ctx.saltminer.score.pass_fail_reasons;\n    String businessCriticality = ctx.saltminer.asset.attributes.business_criticality;\n    long openFrequencyLong = 0;\n    String openFrequencyStr = '0';\n\n    String sdlcStatus = ctx.saltminer.asset.attributes.sdlc_status;\n\n    if (businessCriticality == 'Medium') {\n        if (sdlcStatus == 'Production') {\n            openFrequencyStr = '30';\n            openFrequencyLong = 30;\n            ctx.error = openFrequencyLong;\n        } else if (sdlcStatus == 'Development') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n            ctx.error = openFrequencyLong;\n        } else if (sdlcStatus == 'QA') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n            ctx.error = openFrequencyLong;\n        } else if (sdlcStatus == 'Retired') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n            ctx.error = openFrequencyLong;\n        }\n    } else if (businessCriticality == 'High') {\n        if (sdlcStatus == 'Production') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n            ctx.error = openFrequencyLong;\n        } else if (sdlcStatus == 'Development') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n            ctx.error = openFrequencyLong;\n        } else if (sdlcStatus == 'QA') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n            ctx.error = openFrequencyLong;\n        } else if (sdlcStatus == 'Retired') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n            ctx.error = openFrequencyLong;\n        }\n    } else if (businessCriticality == 'Low') {\n        if (sdlcStatus == 'Production') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n        } else if (sdlcStatus == 'Development') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n        } else if (sdlcStatus == 'QA') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n        } else if (sdlcStatus == 'Retired') {\n            openFrequencyStr = '0';\n            openFrequencyLong = 0;\n        }\n    }\n\n    String openReason = \"No open scan within \" + openFrequencyStr + \" days\";\n\n    if (openFrequencyLong != 0) {\n        if (ctx.saltminer.score.last_scan.open > openFrequencyLong) {\n            ctx.saltminer.score.pass_fail = false;\n            if (!ctx.saltminer.score.pass_fail_reasons.contains(openReason)) {\n                failReasons.add(openReason);\n            }\n        }\n    }\n} catch (Exception ex) {\n    ctx.error = ex.toString();\n}\n",
      "ignore_failure": true,
      "description": "Evaluates pass fail for Open scan frequency"
    }
  },
  {
    "script": {
      "source": "String sdlcStatus = ctx.saltminer.asset.attributes.sdlc_status ;\ntry{\n    if(sdlcStatus == 'Retired'){\n    ctx.saltminer.score.pass_fail = true ; \n}\n}\ncatch (Exception ex) {\n    ctx.error = ex.toString();\n}\n",
      "ignore_failure": true,
      "description": "Handler for retired SDLC status "
    }
  },
  {
    "script": {
      "source": "try{\n    if (ctx.saltminer.asset.attributes.business_criticality == null){\n        ctx.saltminer.score.pass_fail = false;\n        String reasons = 'No business criticality set' ; \n        ctx.saltminer.score.pass_fail_reasons = reasons; \n    }\n}\ncatch (Exception ex)\n    {\n        ctx.error = ex.toString();\n    }",
      "ignore_failure": true,
      "description": "Fails docs with no business criticality set"
    }
  }
]
}